ARG username=vscode
ARG useruid=1000
ARG usergid=1000
ARG apt_mirror=archive.ubuntu.com

FROM nvidia/cuda:11.8.0-devel-ubuntu22.04

ENV DEBIAN_FRONTEND=nointeractive
ARG apt_mirror

RUN sed -i "s@archive.ubuntu.com@${apt_mirror}@g" /etc/apt/sources.list && \
    apt-get update && apt-get install -y --no-install-recommends \
    sudo \
    wget \
    curl \
    git \
    unzip \
    ca-certificates \
    gnupg \
    apt-transport-https \
    software-properties-common \
    build-essential \
    # for chrome-browser
    libglib2.0-0 \
    libnss3 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libdrm2 \
    libxkbcommon0 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxrandr2 \
    libgbm1 \
    libpango-1.0-0 \
    libcairo2 \
    libasound2 \
    fonts-ipaexfont-mincho \
    poppler-utils \
    ghostscript

# Docker and Compose (for DooD)
# hadolint ignore=DL3009
RUN install -m 0755 -d /etc/apt/keyrings && \
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg && \
    chmod a+r /etc/apt/keyrings/docker.gpg && \
    echo deb "[arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
    "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null && \
    apt-get update && \
    apt-get install -y --no-install-recommends docker-ce-cli=5:24.0.6-1~ubuntu.22.04~jammy && \
    mkdir -p /usr/local/lib/docker/cli-plugins && \
    curl -SL https://github.com/docker/compose/releases/download/v2.4.1/docker-compose-linux-x86_64 -o /usr/local/lib/docker/cli-plugins/docker-compose && \
    chmod +x /usr/local/lib/docker/cli-plugins/docker-compose

# fish
RUN apt-add-repository ppa:fish-shell/release-3 && \
    apt-get update && apt-get install -y --no-install-recommends fish

# Go
ARG go=1.21.3
RUN wget -O go.tar.gz https://go.dev/dl/go${go}.linux-amd64.tar.gz && \
    tar -C /usr/local -xzf go.tar.gz && \
    rm -rf go.tar.gz
ENV PATH=${PATH}:/usr/local/go/bin

# act
RUN curl -s https://raw.githubusercontent.com/nektos/act/master/install.sh | bash

# Node and Yarn
RUN curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg && \
    echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_18.x nodistro main" | \
    tee /etc/apt/sources.list.d/nodesource.list > /dev/null && \
    curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - && \
    echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list && \
    sudo apt-get update && sudo apt-get install -y --no-install-recommends nodejs=18.18.2-1nodesource1 yarn=1.22.19-1

RUN yarn global add press-ready

ARG username
ARG useruid
ARG usergid

RUN groupadd --gid ${usergid} ${username} && \
    useradd -s /bin/bash --uid ${useruid} --gid ${usergid} -m ${username} && \
    echo ${username} ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/${username} && \
    chmod 0440 /etc/sudoers.d/${username}

COPY ./run.sh /

USER ${username}
ENV PATH=${PATH}:/home/${username}/go/bin

# Poetry
RUN curl -sSL https://install.python-poetry.org | python3 - --version 1.6.1
ENV PATH=${PATH}:/home/${username}/.local/bin
